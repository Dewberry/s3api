{
	"info": {
		"_postman_id": "db98bd13-6aa3-4624-80fa-66e7d7801aff",
		"name": "S3 API Endpoints",
		"description": "Collection to test all S3 API endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18773467",
		"_collection_link": "https://universal-comet-524706.postman.co/workspace/Dewberry~fe115dcb-2f48-4ca3-a618-e462c6ac4255/collection/18773467-db98bd13-6aa3-4624-80fa-66e7d7801aff?action=share&source=collection_link&creator=18773467"
	},
	"item": [
		{
			"name": "Object",
			"item": [
				{
					"name": "upload object",
					"item": [
						{
							"name": "Upload Object - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if override is missing\", function () {",
											"    if(pm.request.url.query.indexOf('override') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if file is missing\", function () {",
											"    if(pm.request.body.file === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "postman-cloud:///1ef2e68b-caf8-4270-80ad-9e03a8f77311"
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object/upload?key={{key}}&bucket={{bucket}}&override=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "override",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Object - 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 409 if key is a conflict\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(409);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "postman-cloud:///1ef2e68b-caf8-4270-80ad-9e03a8f77311"
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object/upload?key={{key}}&bucket={{bucket}}&override=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "override",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Metadata",
					"item": [
						{
							"name": "Get Object Metadata - 200, 400",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/metadata?bucket={{bucket}}&key={{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"metadata"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "key",
											"value": "{{key}}"
										}
									]
								},
								"description": "Get metadata for a valid object key."
							},
							"response": []
						},
						{
							"name": "Get Object Metadata - 404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/metadata?bucket={{bucket}}&key={{non_existent_key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"metadata"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "key",
											"value": "{{non_existent_key}}"
										}
									]
								},
								"description": "Get metadata for a non-existent key."
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Content",
					"item": [
						{
							"name": "Get Content - 200, 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/content?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"content"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Content - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/content?key={{non_existent_key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"content"
									],
									"query": [
										{
											"key": "key",
											"value": "{{non_existent_key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Move Object",
					"item": [
						{
							"name": "Move Object - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404 for object not found\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"src_key\": \"{{src_key}}\", \"dest_key\": \"{{dest_key}}\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/object/move?bucket={{bucket}}&src_key={{non_existent_key}}&dest_key={{key}}/{{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"move"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "src_key",
											"value": "{{non_existent_key}}"
										},
										{
											"key": "dest_key",
											"value": "{{key}}/{{key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move Object - 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 for identical keys\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"src_key\": \"{{src_key}}\", \"dest_key\": \"{{dest_key}}\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/object/move?bucket={{bucket}}&src_key={{key}}/{{key}}&dest_key={{key}}/{{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"move"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "src_key",
											"value": "{{key}}/{{key}}"
										},
										{
											"key": "dest_key",
											"value": "{{key}}/{{key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move Object - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if src_key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('src_key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if dest_key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('dest_key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"src_key\": \"{{src_key}}\", \"dest_key\": \"{{dest_key}}\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/object/move?bucket={{bucket}}&src_key={{key}}&dest_key={{prefix}}{{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"move"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "src_key",
											"value": "{{key}}"
										},
										{
											"key": "dest_key",
											"value": "{{prefix}}{{key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move Object - 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 for conflict with the dest_key\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"src_key\": \"{{src_key}}\", \"dest_key\": \"{{dest_key}}\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/object/move?bucket={{bucket}}&src_key={{key}}&dest_key={{prefix}}{{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"move"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "src_key",
											"value": "{{key}}"
										},
										{
											"key": "dest_key",
											"value": "{{prefix}}{{key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move Object - proc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//no script test this is a procedural call for further endpoints",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"src_key\": \"{{src_key}}\", \"dest_key\": \"{{dest_key}}\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/object/move?bucket={{bucket}}&src_key={{prefix}}{{key}}&dest_key={{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"move"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "src_key",
											"value": "{{prefix}}{{key}}"
										},
										{
											"key": "dest_key",
											"value": "{{key}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Download Object",
					"item": [
						{
							"name": "Download Object - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/download?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"download"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Download Object - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404 for object not found\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/download?key={{non_existent_key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"download"
									],
									"query": [
										{
											"key": "key",
											"value": "{{non_existent_key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Object",
					"item": [
						{
							"name": "Delete Object - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 404 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(404);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/delete?key={{non_existent_key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"delete"
									],
									"query": [
										{
											"key": "key",
											"value": "{{non_existent_key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Object - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/delete?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"delete"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Object Exists",
					"item": [
						{
							"name": "Check Object Exists - 200, 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/exists?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"exists"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Presigned upload",
					"item": [
						{
							"name": "Get Presigned Upload URL - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Presigned URL is returned\", function () {",
											"    var presignedUrl = pm.response.text().trim();",
											"    pm.environment.set(\"presigned_url\", presignedUrl);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/presigned_upload?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"presigned_upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "use upload presigned URL -200",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get the presigned URL from the environment variable\r",
											"var presignedUrl = pm.environment.get(\"presigned_url\");\r",
											"\r",
											"// Remove surrounding quotes if present\r",
											"if (presignedUrl.startsWith('\"') && presignedUrl.endsWith('\"')) {\r",
											"    presignedUrl = presignedUrl.substring(1, presignedUrl.length - 1);\r",
											"}\r",
											"\r",
											"// Set the trimmed presigned URL back to the environment variable\r",
											"pm.environment.set(\"presigned_url\", presignedUrl);\r",
											"\r",
											"// Set the URL of the request to the trimmed presigned URL\r",
											"pm.request.url.update(presignedUrl);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": "postman-cloud:///1ef2e68b-caf8-4270-80ad-9e03a8f77311"
									}
								},
								"url": {
									"raw": "{{presigned_url}}",
									"host": [
										"{{presigned_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Multipart Upload ID - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"uploadId\", jsonData);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/multipart_upload_id?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"multipart_upload_id"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Presigned Upload URL - 200,400 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json()//.replace('minio', 'localhost');",
											"pm.environment.set(\"presignedUploadUrl\", jsonData);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/presigned_upload?key={{key}}&bucket={{bucket}}&upload_id={{uploadId}}&part_number=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"presigned_upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "upload_id",
											"value": "{{uploadId}}"
										},
										{
											"key": "part_number",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "presigned_url_test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Extract ETag from the response header\r",
											"var etag = pm.response.headers.get(\"ETag\");\r",
											"\r",
											"\r",
											"// Remove extra quotation marks if present\r",
											"etag = etag.replace(/\"/g, '');\r",
											"\r",
											"\r",
											"// Set the ETag as an environment variable\r",
											"pm.environment.set(\"etag\", etag);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "",
											"type": "file",
											"src": "FFRMS/missing_huc8s.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{presignedUploadUrl}}",
									"host": [
										"{{presignedUploadUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete the Multipart Upload",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"uploadId\": \"{{uploadId}}\",\r\n    \"parts\": [{\r\n        \"partNumber\":1,\r\n        \"eTag\":\"{{etag}}\"\r\n    }]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object/complete_multipart_upload?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"complete_multipart_upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Multipart Upload ID -  config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"",
											"pm.test(\"Upload ID is returned\", function () {",
											"    var uploadId = pm.response.text().trim();",
											"    pm.environment.set(\"upload_id\", uploadId.replace(/\"/g, ''));",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/object/multipart_upload_id?key={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"multipart_upload_id"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Abort Multipart Upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if key is missing\", function () {",
											"    if(pm.request.url.query.indexOf('key') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if upload_id is missing\", function () {",
											"    if(pm.request.url.query.indexOf('upload_id') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"key\": \"{{key}}\", \"bucket\": \"{{bucket}}\", \"uploadID\": \"{{uploadID}}\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/object/abort_multipart_upload?key={{key}}&bucket={{bucket}}&upload_id={{upload_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"abort_multipart_upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "upload_id",
											"value": "{{upload_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Prefix",
			"item": [
				{
					"name": "List Prefix",
					"item": [
						{
							"name": "List Prefix - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/list?bucket={{bucket}}&delimiter=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"list"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{prefix}}",
											"disabled": true
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "delimiter",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Prefix - 418",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 418 if prefix is poimting to an object\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(418);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/list?prefix={{key}}&bucket={{bucket}}&delimiter=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"list"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "delimiter",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List Prefix With Detail",
					"item": [
						{
							"name": "List Prefix with Details - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/list_with_details?prefix={{prefix}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"list_with_details"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{prefix}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Prefix - 418",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 418 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(418);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/list_with_details?bucket={{bucket}}&prefix={{key}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"list_with_details"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "prefix",
											"value": "{{key}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Generate Download Script",
					"item": [
						{
							"name": "Generate Download Script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if prefix is missing\", function () {",
											"    if(pm.request.url.query.indexOf('prefix') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"",
											"",
											"//unable to test size overload"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/download/script?prefix={{prefix}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"download",
										"script"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{prefix}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Move Prefix",
					"item": [
						{
							"name": "Upload Object - config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "postman-cloud:///1ef2e68b-caf8-4270-80ad-9e03a8f77311"
									}
								},
								"url": {
									"raw": "{{baseUrl}}/object/upload?key={{prefix}}{{key}}&bucket={{bucket}}&override=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										"upload"
									],
									"query": [
										{
											"key": "key",
											"value": "{{prefix}}{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "override",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move Prefix  - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if src_prefix is missing\", function () {",
											"    if(pm.request.url.query.indexOf('src_prefix') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if dest_prefix is missing\", function () {",
											"    if(pm.request.url.query.indexOf('dest_prefix') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"",
											"//might need more testing when this is multibucketd "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/prefix/move?bucket={{bucket}}&src_prefix={{prefix}}&dest_prefix={{prefix}}{{prefix}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"move"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										},
										{
											"key": "src_prefix",
											"value": "{{prefix}}"
										},
										{
											"key": "dest_prefix",
											"value": "{{prefix}}{{prefix}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Prefix Size",
					"item": [
						{
							"name": "Get Size - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if prefix is missing\", function () {",
											"    if(pm.request.url.query.indexOf('prefix') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/size?prefix={{prefix}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"size"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{prefix}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Size - 419",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 418 if prefix is poimting to an object\", function () {\r",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {\r",
											"        pm.response.to.have.status(418);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/size?prefix={{key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"size"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Size - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 404 if prefix is not found\", function () {\r",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {\r",
											"        pm.response.to.have.status(404);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/size?prefix={{prefix}}22&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"size"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{prefix}}22"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Prefix",
					"item": [
						{
							"name": "Delete Prefix - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if prefix is missing\", function () {",
											"    if(pm.request.url.query.indexOf('prefix') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/delete?prefix={{prefix}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"delete"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{prefix}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Prefix - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404 if bucket is missing\", function () {\r",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {\r",
											"        pm.response.to.have.status(404);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/prefix/delete?prefix={{non_existent_key}}&bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"prefix",
										"delete"
									],
									"query": [
										{
											"key": "prefix",
											"value": "{{non_existent_key}}"
										},
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Universal",
			"item": [
				{
					"name": "Delete Keys",
					"item": [
						{
							"name": "Delete Keys - 200,400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Status code is 400 if bucket is missing\", function () {",
											"    if(pm.request.url.query.indexOf('bucket') === -1) {",
											"        pm.response.to.have.status(400);",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"keys\": [\"{{key}}\"]}"
								},
								"url": {
									"raw": "{{baseUrl}}/delete_keys?bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_keys"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Keys - 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"keys\": []}"
								},
								"url": {
									"raw": "{{baseUrl}}/delete_keys?bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_keys"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Keys - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"keys\":[\"{{non_existent_key}}\"]}"
								},
								"url": {
									"raw": "{{baseUrl}}/delete_keys?bucket={{bucket}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_keys"
									],
									"query": [
										{
											"key": "bucket",
											"value": "{{bucket}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Multi-Bucket",
			"item": [
				{
					"name": "List Buckets",
					"item": [
						{
							"name": "List Buckets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/list_buckets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list_buckets"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Check User Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/check_user_permission?bucket={{bucket}}&prefix={{prefix}}&operation={{operation}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"check_user_permission"
							],
							"query": [
								{
									"key": "bucket",
									"value": "{{bucket}}"
								},
								{
									"key": "prefix",
									"value": "{{prefix}}"
								},
								{
									"key": "operation",
									"value": "{{operation}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}